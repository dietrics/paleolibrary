closest.element(1:10,5)
closest.element(1:10,5.2)
closest.element(1:10,5.6)
closest.element(1:10,5.6,type="L")
closest.element(1:10,5.6,type="L")
closest.element(1:10,5.6,type="L")
5.6<1.10
which(5.6<(1:10))
closest.element<-function(xvector,x,type="N")
{
   if (type=="N")  return(which.min(abs(x-xvector)))

   if (min(diff(xvector))<0) stop("Vector must be monotonically increasing for the the methods M and L")
   if (type=="M") return(first(which(x<=xvector)))
   if (type=="L") return(last(which(x>=xvector)))
   
}
closest.element(1:10,5.6,type="L")
closest.element(1:10,5.8,type="L")
closest.element(1:10,6.0,type="L")
closest.element(1:10,6.1,type="L")
closest.element(1:10,6.1,type="M")
closest.element(15:10,6.1,type="M")
closest.element(10:15,6.1,type="M")
closest.element(10:15,6.1,type="L")
closest.element(10:15,6.1,type="M")
?seq
which((a<5)&(a>2))
which((a<5)&(a>2),(a<10))
which((a<5)&(a>2),(a<10))
45/6
pretty(1:10,5)
?mean
ts<-rnorm(100)
ts<-red(0.99,100)
ts<-red(0.99,100)
ts<-red(0.9,100)
spans=3
nBins=20
binSepc
binSpec
spec$spec
spec$freq
binSpec
log(spec$freq)
x<-lof(spec$freq)
x<-log(spec$freq)
y<-spec$spec
N<-20
binSpec
ts<-red(0.99,100)
binAvg(1:10,1:10,N=5)
binAvg(1:10,1:10,N=20)
binAvg(1:10,1:10,N=20,bFill=T)
binAvg(1:10,1:10,N=20,bFill=T)
binAvg(1:10,1:10,N=100,bFill=T)
binSpec
nBins<-1000
nBins<-10
closest.element(1:10,4.2,type="L")
1:10[2:8]
(1:10)[2:8]
(1:10)[-5][2:8]
(1:10)[2:8][-5]
bDebug=TRUE
ts<-ncep.res[,1000]
ts
plot(ts)
nBins<-100
freq.start<-1/25
freq.end<-1/6
i.start
i.end
df.annual<-0.2
index
index
binFreq[index]
)
length(index)
freq.end
freq.end
freq.end<-6
)
model
summary(model)
dim(ncep.res)
)
dim(result)
dim(result)
dim(result)
plot(result[1,])
dim(dfannualTest)
pField
getname(dfannualTest[,1])
getname(dfannualTest[,2])
plot(dfannualTest[,1])
plot(dfannualTest[1,])
dfannualTest<-pField(NA,1:4,getlat(ncep.res),getlon(ncep.res),name=c("1/25 (1/10),,6,bBins=100 (50),df.annual=(0/2"))
plot(dfannualTest[1,])
plot(dfannualTest[1,])
plot(dfannualTest[6,])
spec.pgram
plot(dfannualTest[4,])
)
)
profile
Rprof("boot.out")

Rprof(NULL)
Rprof("e:\log.txt")
Rprof("e:/log.txt")
Rprof(NULL)
summaryRprof() 
Rprof()
Rprof("e:/log.txt")
Rprof(NULL)
Rprof()
Rprof(NULL)
summaryRprof() 
Rprof("e:/log.txt")
Rprof("")
Rprof()
Rprof(NULL)
summaryRprof() 
meta
index.fast
index.fast
save
index.fast
length(index.fast)
save
getlat(alk.fast)
getlon(alk.fast)
plot(getlon(alkfast),save)
plot(getlon(alk.fast),save)
plot(getlon(alk.fast),save)
plot(getlat(alk.fast),save)
plot(getlat(alk.fast),save)
plot(getlon(alk.fast),save)
dim(alk)
dim(alk$ts)
save
hist(save)
tstat
index.fast
getlat(alk.fast)
getlon(alk.fast)
lons
i
i<-
1
getlat(alk.fast[,i])
lons[1]
getlon(ncep.res)
cor.test(save,saveM)
1000/20
tstat$meandiff[index.fast]
stopfreq
stopfreq
warnings()
stopfreq
mean(save)
mean(save)
mean(save2)
summary(unclass(summary(model)))
slopesd
slopesd[2,4]
slopesd[4,2]
slopesd[2,4]
slopesd[2,1]
slopesd[2,2]
alk.fast
index.fast
index.fast
index.fast
save
save
savesd
plot(alk.fast)
index.fast
tstat$meandiff
tstat
tstat$mintime
savesd
save
range(time(alk.fast[,26]))
plot(alk.fast[,26])
range(time(na.omit(alk.fast[,26])))
range(time(na.omit(alk.fast[,25])))
range(time(na.omit(alk.fast[,24])))
mean(save)
mean(save)
mean(save)
mean(save)
mean(save)
mean(save)
mean(save)
meta
dim(meta)
meta
tstat$meandiff
dim(mgca.fast)
data<-mgca.fast
freq.start=0.1
freq.end=2
spans=3
dim(data)[2]
i<-1
temp
getlat(mgca.fast)
as.numeric(getlat(mgca.fast)
)
?read.csv
meta
meta[,2]
meta[,3]
getlat(mgca.fast)
getlat(mgca.fast)
m1
?errbar
m1$slope
